{"ast":null,"code":"var _jsxFileName = \"/home/itech/todo/my-todo/src/todo/Login.js\";\nimport { Button, Form, Input } from \"antd\";\nimport react from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  const onFinish = values => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-10 mt-5 text-center\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            name: \"basic\",\n            labelCol: {\n              span: 8\n            },\n            wrapperCol: {\n              span: 16\n            },\n            initialValues: {\n              remember: true\n            },\n            onFinish: onFinish,\n            onFinishFailed: onFinishFailed,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Username\",\n              name: \"username\",\n              rules: [{\n                required: true,\n                message: \"Please input your username!\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Password\",\n              name: \"password\",\n              rules: [{\n                required: true,\n                message: \"Please input your password!\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              wrapperCol: {\n                offset: 8,\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","Form","Input","react","Login","onFinish","values","console","log","onFinishFailed","errorInfo","span","remember","required","message","offset"],"sources":["/home/itech/todo/my-todo/src/todo/Login.js"],"sourcesContent":["import { Button, Form, Input } from \"antd\";\nimport react from \"react\";\n\n\nconst Login = () => {\n\n\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row \">\n          <div className=\"col-md-10 mt-5 text-center\">\n            <Form\n              name=\"basic\"\n              labelCol={{\n                span: 8,\n              }}\n              wrapperCol={{\n                span: 16,\n              }}\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n              autoComplete=\"off\"\n            >\n              <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your username!\",\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your password!\",\n                  },\n                ]}\n              >\n                <Input.Password />\n              </Form.Item>\n\n              <Form.Item\n                wrapperCol={{\n                  offset: 8,\n                  span: 16,\n                }}\n              >\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAGA,MAAMC,KAAK,GAAG,MAAM;EAGlB,MAAMC,QAAQ,GAAIC,MAAD,IAAY;IAC3BC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;EACD,CAFD;;EAIA,MAAMG,cAAc,GAAIC,SAAD,IAAe;IACpCH,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,SAAvB;EACD,CAFD;;EAMA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,uBACE;QAAK,SAAS,EAAC,MAAf;QAAA,uBACE;UAAK,SAAS,EAAC,4BAAf;UAAA,uBACE,QAAC,IAAD;YACE,IAAI,EAAC,OADP;YAEE,QAAQ,EAAE;cACRC,IAAI,EAAE;YADE,CAFZ;YAKE,UAAU,EAAE;cACVA,IAAI,EAAE;YADI,CALd;YAQE,aAAa,EAAE;cACbC,QAAQ,EAAE;YADG,CARjB;YAWE,QAAQ,EAAEP,QAXZ;YAYE,cAAc,EAAEI,cAZlB;YAaE,YAAY,EAAC,KAbf;YAAA,wBAeE,QAAC,IAAD,CAAM,IAAN;cACE,KAAK,EAAC,UADR;cAEE,IAAI,EAAC,UAFP;cAGE,KAAK,EAAE,CACL;gBACEI,QAAQ,EAAE,IADZ;gBAEEC,OAAO,EAAE;cAFX,CADK,CAHT;cAAA,uBAUE,QAAC,KAAD;gBAAA;gBAAA;gBAAA;cAAA;YAVF;cAAA;cAAA;cAAA;YAAA,QAfF,eA4BE,QAAC,IAAD,CAAM,IAAN;cACE,KAAK,EAAC,UADR;cAEE,IAAI,EAAC,UAFP;cAGE,KAAK,EAAE,CACL;gBACED,QAAQ,EAAE,IADZ;gBAEEC,OAAO,EAAE;cAFX,CADK,CAHT;cAAA,uBAUE,QAAC,KAAD,CAAO,QAAP;gBAAA;gBAAA;gBAAA;cAAA;YAVF;cAAA;cAAA;cAAA;YAAA,QA5BF,eAyCE,QAAC,IAAD,CAAM,IAAN;cACE,UAAU,EAAE;gBACVC,MAAM,EAAE,CADE;gBAEVJ,IAAI,EAAE;cAFI,CADd;cAAA,uBAME,QAAC,MAAD;gBAAQ,IAAI,EAAC,SAAb;gBAAuB,QAAQ,EAAC,QAAhC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YANF;cAAA;cAAA;cAAA;YAAA,QAzCF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA8DD,CA3ED;;KAAMP,K;AA6EN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}