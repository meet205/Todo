{"ast":null,"code":"var _jsxFileName = \"/home/itech/todo/my-todo/src/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Checkbox, Form, Input } from \"antd\";\nimport { useNavigate } from \"react-router-dom\"; // import axios from \"axios\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState(); // const [allEntry, setAllEntry] = useState();\n\n  const navigate = useNavigate();\n\n  const onFinish = values => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"user-info\")) {\n      navigate(\"/curd\", {\n        replace: true\n      });\n    }\n  }, []);\n\n  const submitForm = async e => {\n    e.preventDefault();\n    let item = {\n      email,\n      password\n    };\n    console.log(\"INSIDEE\");\n    let result = await fetch(\"http://localhost:3003/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(item)\n    });\n    console.log(result, \"result\");\n    result = result.json(); // if(result === )\n\n    localStorage.setItem(\"user-info\", JSON.stringify(result));\n    navigate(\"/curd\", {\n      replace: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div\",\n      style: {\n        backgroundColor: \"orange\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12  mt-5 text-center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"jLJhf4d6hyBa/ExpaJ8SEMQ8y5Y=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login; // <Form\n// onSubmit={submitForm}\n// name=\"basic\"\n// labelCol={{ span: 8 }}\n// wrapperCol={{ span: 16 }}\n// initialValues={{ remember: true }}\n// onFinish={onFinish}\n// onFinishFailed={onFinishFailed}\n// autoComplete=\"off\"\n// >\n// <Form.Item\n//   label=\"Username\"\n//   name=\"username\"\n//   rules={[{ required: true, message: 'Please input your username!' }]}\n// >\n//   <Input  value={email}\n// onChange={(e) => setEmail(e.target.value)} />\n// </Form.Item>\n// <Form.Item\n//   label=\"Password\"\n//   name=\"password\"\n//   rules={[{ required: true, message: 'Please input your password!' }]}\n// >\n//   <Input.Password    value={password}\n// onChange={(e) => setPassword(e.target.value)} />\n// </Form.Item>\n// <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n//   <Button  type=\"submit\" className=\"btn btn-warning\" >\n//     Submit\n//   </Button>\n// </Form.Item>\n// </Form>\n\n/*#__PURE__*/\n_jsxDEV(\"form\", {\n  onSubmit: submitForm,\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"email\",\n      autoComplete: \"off\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"password\",\n      autoComplete: \"off\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-warning\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 1\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 101,\n  columnNumber: 1\n}, this);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Button","Checkbox","Form","Input","useNavigate","Login","email","setEmail","password","setPassword","navigate","onFinish","values","console","log","onFinishFailed","errorInfo","localStorage","getItem","replace","submitForm","e","preventDefault","item","result","fetch","method","headers","Accept","body","JSON","stringify","json","setItem","backgroundColor","target","value"],"sources":["/home/itech/todo/my-todo/src/Login/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Checkbox, Form, Input } from \"antd\";\n\nimport { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n\nconst Login = () => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  // const [allEntry, setAllEntry] = useState();\n  const navigate = useNavigate();\n\n  const onFinish = (values: any) => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"user-info\")) {\n      navigate(\"/curd\", { replace: true });\n    }\n  }, []);\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    let item = { email, password };\n    console.log(\"INSIDEE\");\n    let result = await fetch(\"http://localhost:3003/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(item),\n    });\n    console.log(result, \"result\");\n    result = result.json();\n    // if(result === )\n\n    localStorage.setItem(\"user-info\", JSON.stringify(result));\n    navigate(\"/curd\", { replace: true });\n  };\n\n  return (\n    <>\n      <div className=\"div\" style={{ backgroundColor: \"orange\" }}>\n        <div className=\"row \">\n          <div className=\"col-md-12  mt-5 text-center\">\n           \n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n\n// <Form\n// onSubmit={submitForm}\n// name=\"basic\"\n// labelCol={{ span: 8 }}\n// wrapperCol={{ span: 16 }}\n// initialValues={{ remember: true }}\n// onFinish={onFinish}\n// onFinishFailed={onFinishFailed}\n// autoComplete=\"off\"\n// >\n// <Form.Item\n//   label=\"Username\"\n//   name=\"username\"\n//   rules={[{ required: true, message: 'Please input your username!' }]}\n// >\n//   <Input  value={email}\n// onChange={(e) => setEmail(e.target.value)} />\n// </Form.Item>\n\n// <Form.Item\n//   label=\"Password\"\n//   name=\"password\"\n//   rules={[{ required: true, message: 'Please input your password!' }]}\n// >\n//   <Input.Password    value={password}\n// onChange={(e) => setPassword(e.target.value)} />\n// </Form.Item>\n\n// <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n//   <Button  type=\"submit\" className=\"btn btn-warning\" >\n//     Submit\n//   </Button>\n// </Form.Item>\n// </Form>\n\n\n\n\n\n<form onSubmit={submitForm}>\n<div>\n  <label>Email </label>\n  <br />\n  <input\n    type=\"text\"\n    name=\"email\"\n    id=\"email\"\n    placeholder=\"email\"\n    autoComplete=\"off\"\n    value={email}\n    onChange={(e) => setEmail(e.target.value)}\n  />\n</div>\n<br />\n<div>\n  <label>Password </label>\n  <br />\n  <input\n    type=\"text\"\n    name=\"password\"\n    id=\"password\"\n    placeholder=\"password\"\n    autoComplete=\"off\"\n    value={password}\n    onChange={(e) => setPassword(e.target.value)}\n  />\n</div>\n<br />\n<div>\n  <button type=\"submit\" className=\"btn btn-warning\">\n    Login\n  </button>\n</div>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}