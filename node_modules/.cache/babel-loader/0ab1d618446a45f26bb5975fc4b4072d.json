{"ast":null,"code":"var _jsxFileName = \"/home/itech/todo/my-todo/src/todo/Login.js\";\nimport { Button, Checkbox, Form, Input } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  const onFinish = values => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    },\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: \"Please input your username!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: \"Please input your password!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"remember\",\n      valuePropName: \"checked\",\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","Checkbox","Form","Input","Login","onFinish","values","console","log","onFinishFailed","errorInfo","span","remember","required","message","offset"],"sources":["/home/itech/todo/my-todo/src/todo/Login.js"],"sourcesContent":["import { Button, Checkbox, Form, Input } from \"antd\";\n\nconst Login = () => {\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Form\n      name=\"basic\"\n      labelCol={{\n        span: 8,\n      }}\n      wrapperCol={{\n        span: 16,\n      }}\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      autoComplete=\"off\"\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your username!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your password!\",\n          },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"remember\"\n        valuePropName=\"checked\"\n        wrapperCol={{\n          offset: 8,\n          span: 16,\n        }}\n      >\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item\n        wrapperCol={{\n          offset: 8,\n          span: 16,\n        }}\n      >\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Login;\n"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,KAAjC,QAA8C,MAA9C;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAClB,MAAMC,QAAQ,GAAIC,MAAD,IAAY;IAC3BC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;EACD,CAFD;;EAIA,MAAMG,cAAc,GAAIC,SAAD,IAAe;IACpCH,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,SAAvB;EACD,CAFD;;EAIA,oBACE,QAAC,IAAD;IACE,IAAI,EAAC,OADP;IAEE,QAAQ,EAAE;MACRC,IAAI,EAAE;IADE,CAFZ;IAKE,UAAU,EAAE;MACVA,IAAI,EAAE;IADI,CALd;IAQE,aAAa,EAAE;MACbC,QAAQ,EAAE;IADG,CARjB;IAWE,QAAQ,EAAEP,QAXZ;IAYE,cAAc,EAAEI,cAZlB;IAaE,YAAY,EAAC,KAbf;IAAA,wBAeE,QAAC,IAAD,CAAM,IAAN;MACE,KAAK,EAAC,UADR;MAEE,IAAI,EAAC,UAFP;MAGE,KAAK,EAAE,CACL;QACEI,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE;MAFX,CADK,CAHT;MAAA,uBAUE,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA;IAVF;MAAA;MAAA;MAAA;IAAA,QAfF,eA4BE,QAAC,IAAD,CAAM,IAAN;MACE,KAAK,EAAC,UADR;MAEE,IAAI,EAAC,UAFP;MAGE,KAAK,EAAE,CACL;QACED,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE;MAFX,CADK,CAHT;MAAA,uBAUE,QAAC,KAAD,CAAO,QAAP;QAAA;QAAA;QAAA;MAAA;IAVF;MAAA;MAAA;MAAA;IAAA,QA5BF,eAyCE,QAAC,IAAD,CAAM,IAAN;MACE,IAAI,EAAC,UADP;MAEE,aAAa,EAAC,SAFhB;MAGE,UAAU,EAAE;QACVC,MAAM,EAAE,CADE;QAEVJ,IAAI,EAAE;MAFI,CAHd;MAAA,uBAQE,QAAC,QAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IARF;MAAA;MAAA;MAAA;IAAA,QAzCF,eAoDE,QAAC,IAAD,CAAM,IAAN;MACE,UAAU,EAAE;QACVI,MAAM,EAAE,CADE;QAEVJ,IAAI,EAAE;MAFI,CADd;MAAA,uBAME,QAAC,MAAD;QAAQ,IAAI,EAAC,SAAb;QAAuB,QAAQ,EAAC,QAAhC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IANF;MAAA;MAAA;MAAA;IAAA,QApDF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiED,CA1ED;;KAAMP,K;AA4EN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}