{"ast":null,"code":"var _jsxFileName = \"/home/itech/todo/my-todo/src/todo/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-10 mt-5 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                HtmlFor: \"email\",\n                children: \"Email \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"email\",\n                id: \"email\",\n                placeholder: \"email\",\n                autocomplete: \"off\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                HtmlFor: \"password\",\n                children: \"Password \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"password\",\n                id: \"password\",\n                placeholder: \"password\",\n                autocomplete: \"off\",\n                value: password,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"Wcvhc/rOFeXdMzBmPCWqlCAdDmY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login; // <Form\n//               name=\"basic\"\n//               labelCol={{\n//                 span: 8,\n//               }}\n//               wrapperCol={{\n//                 span: 16,\n//               }}\n//               initialValues={{\n//                 remember: true,\n//               }}\n//               onFinish={onFinish}\n//               onFinishFailed={onFinishFailed}\n//               autoComplete=\"off\"\n//             >\n//               <Form.Item\n//                 label=\"Username\"\n//                 value={email}\n//                 name=\"email\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"Please input your username!\",\n//                   },\n//                 ]}\n//                 onChange={(e) => setEmail(e.target.value)}\n//               >\n//                 <Input />\n//               </Form.Item>\n//               <Form.Item\n//                 label=\"Password\"\n//                 value={password}\n//                 name=\"password\"\n//                 type=\"password\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"Please input your password!\",\n//                   },\n//                 ]}\n//                 onChange={(e) => setPassword(e.target.value)}\n//               >\n//                 <Input.Password />\n//               </Form.Item>\n//               <Form.Item\n//                 wrapperCol={{\n//                   offset: 8,\n//                   span: 16,\n//                 }}\n//               >\n//                 <Button\n//                   type=\"primary\"\n//                   htmlType=\"submit\"\n//                   onClick={(e) => submit(e)}\n//                 >\n//                   Submit\n//                 </Button>\n//               </Form.Item>\n//             </Form>\n// useEffect(() => {\n//   if (localStorage.getItem(\"user-info\")) {\n//     navigate(\"/curd\", { replace: true });\n//   }\n// }, []);\n// const onFinish = (values) => {\n//   console.log(\"Success:\", values);\n// };\n// const onFinishFailed = (errorInfo) => {\n//   console.log(\"Failed:\", errorInfo);\n// };\n// const submit = (e) => {\n//   fetch(\"http://localhost:4500/login\", {\n//     method: \"POST\",\n//     body: JSON.stringify(login),\n//   }).then((response) => {\n//     response.json().then((result) => {\n//       console.log(result);\n//       localStorage.setItem(\n//         \"login\",\n//         JSON.stringify({\n//           login: true,\n//           token: result.token,\n//         })\n//       );\n//       setLogin({ login: true });\n//     });\n//   });\n// e.preventDefault();\n// const item = { email, password };\n// const result = await axios\n//   .post(`http://localhost:4500/login`, login)\n//   .then((res) => {\n//     console.log(res, \"fjfhjkfkfashkh\");\n//     localStorage.setItem(\"token\", res.token);\n//   })\n//   .catch((err) => {\n//     console.log(err, \"login time error\");\n//   });\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["react","useState","useEffect","Button","Form","Input","useNavigate","axios","Login","email","setEmail","password","setPassword","navigate","e","target","value"],"sources":["/home/itech/todo/my-todo/src/todo/Login.jsx"],"sourcesContent":["import react, { useState, useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Login = () => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row \">\n          <div className=\"col-md-10 mt-5 text-center\">\n            <form action=\"\">\n              <div>\n                <label HtmlFor=\"email\" >Email </label>\n                <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"email\" autocomplete=\"off\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)} />\n              </div>\n              <div>\n                <label HtmlFor=\"password\" >Password </label>\n                <input type=\"text\" name=\"password\" id=\"password\" placeholder=\"password\" autocomplete=\"off\"\n                value={password}\n                onChange={(e) => setEmail(e.target.value)} />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n\n\n\n\n\n\n\n\n\n\n\n\n// <Form\n//               name=\"basic\"\n//               labelCol={{\n//                 span: 8,\n//               }}\n//               wrapperCol={{\n//                 span: 16,\n//               }}\n//               initialValues={{\n//                 remember: true,\n//               }}\n//               onFinish={onFinish}\n//               onFinishFailed={onFinishFailed}\n//               autoComplete=\"off\"\n//             >\n//               <Form.Item\n//                 label=\"Username\"\n//                 value={email}\n//                 name=\"email\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"Please input your username!\",\n//                   },\n//                 ]}\n//                 onChange={(e) => setEmail(e.target.value)}\n//               >\n//                 <Input />\n//               </Form.Item>\n\n//               <Form.Item\n//                 label=\"Password\"\n//                 value={password}\n//                 name=\"password\"\n//                 type=\"password\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"Please input your password!\",\n//                   },\n//                 ]}\n//                 onChange={(e) => setPassword(e.target.value)}\n//               >\n//                 <Input.Password />\n//               </Form.Item>\n\n//               <Form.Item\n//                 wrapperCol={{\n//                   offset: 8,\n//                   span: 16,\n//                 }}\n//               >\n//                 <Button\n//                   type=\"primary\"\n//                   htmlType=\"submit\"\n//                   onClick={(e) => submit(e)}\n//                 >\n//                   Submit\n//                 </Button>\n//               </Form.Item>\n//             </Form>\n  \n\n\n\n\n\n  // useEffect(() => {\n  //   if (localStorage.getItem(\"user-info\")) {\n  //     navigate(\"/curd\", { replace: true });\n  //   }\n  // }, []);\n\n  // const onFinish = (values) => {\n  //   console.log(\"Success:\", values);\n  // };\n\n  // const onFinishFailed = (errorInfo) => {\n  //   console.log(\"Failed:\", errorInfo);\n  // };\n\n  // const submit = (e) => {\n  //   fetch(\"http://localhost:4500/login\", {\n  //     method: \"POST\",\n  //     body: JSON.stringify(login),\n  //   }).then((response) => {\n  //     response.json().then((result) => {\n  //       console.log(result);\n  //       localStorage.setItem(\n  //         \"login\",\n  //         JSON.stringify({\n  //           login: true,\n  //           token: result.token,\n  //         })\n  //       );\n  //       setLogin({ login: true });\n  //     });\n  //   });\n\n  // e.preventDefault();\n  // const item = { email, password };\n  // const result = await axios\n  //   .post(`http://localhost:4500/login`, login)\n  //   .then((res) => {\n  //     console.log(res, \"fjfhjkfkfashkh\");\n  //     localStorage.setItem(\"token\", res.token);\n  //   })\n  //   .catch((err) => {\n  //     console.log(err, \"login time error\");\n  //   });\n  // };\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;EACA,MAAMY,QAAQ,GAAGP,WAAW,EAA5B;EAGA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,uBACE;QAAK,SAAS,EAAC,MAAf;QAAA,uBACE;UAAK,SAAS,EAAC,4BAAf;UAAA,uBACE;YAAM,MAAM,EAAC,EAAb;YAAA,wBACE;cAAA,wBACE;gBAAO,OAAO,EAAC,OAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAO,IAAI,EAAC,MAAZ;gBAAmB,IAAI,EAAC,OAAxB;gBAAgC,EAAE,EAAC,OAAnC;gBAA2C,WAAW,EAAC,OAAvD;gBAA+D,YAAY,EAAC,KAA5E;gBACA,KAAK,EAAEG,KADP;gBAEA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;cAFzB;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAOE;cAAA,wBACE;gBAAO,OAAO,EAAC,UAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAO,IAAI,EAAC,MAAZ;gBAAmB,IAAI,EAAC,UAAxB;gBAAmC,EAAE,EAAC,UAAtC;gBAAiD,WAAW,EAAC,UAA7D;gBAAwE,YAAY,EAAC,KAArF;gBACA,KAAK,EAAEL,QADP;gBAEA,QAAQ,EAAGG,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;cAFzB;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA,QAPF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAwBD,CA9BD;;GAAMR,K;UAGaF,W;;;KAHbE,K;AAgCN,eAAeA,KAAf,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}