{"ast":null,"code":"var _jsxFileName = \"/home/itech/todo/my-todo/src/todo/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, Input } from 'antd';\nimport { useNavigate } from \"react-router-dom\"; // import axios from \"axios\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState(); // const [allEntry, setAllEntry] = useState();\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (localStorage.getItem(\"user-info\")) {\n      navigate(\"/curd\", {\n        replace: true\n      });\n    }\n  }, []);\n\n  const submitForm = async e => {\n    e.preventDefault();\n    let item = {\n      email,\n      password\n    };\n    console.log(\"INSIDEE\");\n    let result = await fetch(\"http://localhost:3003/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(item)\n    });\n    console.log(result, \"result\");\n    result = result.json();\n    localStorage.setItem(\"user-info\", JSON.stringify(result));\n    navigate(\"/curd\", {\n      replace: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-10 mt-5 text-center\",\n          children: [\"/ \", /*#__PURE__*/_jsxDEV(Form, {\n            on: true,\n            name: \"basic\",\n            labelCol: {\n              span: 8\n            },\n            wrapperCol: {\n              span: 16\n            },\n            initialValues: {\n              remember: true\n            },\n            onFinish: onFinish,\n            onFinishFailed: onFinishFailed,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Username\",\n              value: email,\n              name: \"email\",\n              rules: [{\n                required: true,\n                message: \"Please input your username!\"\n              }],\n              onChange: e => setEmail(e.target.value),\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Password\",\n              value: password,\n              name: \"password\",\n              type: \"password\",\n              rules: [{\n                required: true,\n                message: \"Please input your password!\"\n              }],\n              onChange: e => setPassword(e.target.value),\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              wrapperCol: {\n                offset: 8,\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                onClick: e => submit(e),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"jLJhf4d6hyBa/ExpaJ8SEMQ8y5Y=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login; // <Form\n//               name=\"basic\"\n//               labelCol={{\n//                 span: 8,\n//               }}\n//               wrapperCol={{\n//                 span: 16,\n//               }}\n//               initialValues={{\n//                 remember: true,\n//               }}\n//               onFinish={onFinish}\n//               onFinishFailed={onFinishFailed}\n//               autoComplete=\"off\"\n//             >\n//               <Form.Item\n//                 label=\"Username\"\n//                 value={email}\n//                 name=\"email\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"Please input your username!\",\n//                   },\n//                 ]}\n//                 onChange={(e) => setEmail(e.target.value)}\n//               >\n//                 <Input />\n//               </Form.Item>\n//               <Form.Item\n//                 label=\"Password\"\n//                 value={password}\n//                 name=\"password\"\n//                 type=\"password\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"Please input your password!\",\n//                   },\n//                 ]}\n//                 onChange={(e) => setPassword(e.target.value)}\n//               >\n//                 <Input.Password />\n//               </Form.Item>\n//               <Form.Item\n//                 wrapperCol={{\n//                   offset: 8,\n//                   span: 16,\n//                 }}\n//               >\n//                 <Button\n//                   type=\"primary\"\n//                   htmlType=\"submit\"\n//                   onClick={(e) => submit(e)}\n//                 >\n//                   Submit\n//                 </Button>\n//               </Form.Item>\n//             </Form>\n// useEffect(() => {\n//   if (localStorage.getItem(\"user-info\")) {\n//     navigate(\"/curd\", { replace: true });\n//   }\n// }, []);\n// const onFinish = (values) => {\n//   console.log(\"Success:\", values);\n// };\n// const onFinishFailed = (errorInfo) => {\n//   console.log(\"Failed:\", errorInfo);\n// };\n// const submit = (e) => {\n//   fetch(\"http://localhost:4500/login\", {\n//     method: \"POST\",\n//     body: JSON.stringify(login),\n//   }).then((response) => {\n//     response.json().then((result) => {\n//       console.log(result);\n//       localStorage.setItem(\n//         \"login\",\n//         JSON.stringify({\n//           login: true,\n//           token: result.token,\n//         })\n//       );\n//       setLogin({ login: true });\n//     });\n//   });\n// e.preventDefault();\n// const item = { email, password };\n// const result = await axios\n//   .post(`http://localhost:4500/login`, login)\n//   .then((res) => {\n//     console.log(res, \"fjfhjkfkfashkh\");\n//     localStorage.setItem(\"token\", res.token);\n//   })\n//   .catch((err) => {\n//     console.log(err, \"login time error\");\n//   });\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Input","useNavigate","Login","email","setEmail","password","setPassword","navigate","localStorage","getItem","replace","submitForm","e","preventDefault","item","console","log","result","fetch","method","headers","Accept","body","JSON","stringify","json","setItem","span","remember","onFinish","onFinishFailed","required","message","target","value","offset","submit"],"sources":["/home/itech/todo/my-todo/src/todo/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Form, Input } from 'antd';\nimport { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n\nconst Login = () => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  // const [allEntry, setAllEntry] = useState();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"user-info\")) {\n      navigate(\"/curd\", { replace: true });\n    }\n  }, []);\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    let item = { email, password };\n    console.log(\"INSIDEE\");\n    let result = await fetch(\"http://localhost:3003/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(item),\n    });\n    console.log(result, \"result\");\n    result = result.json();\n\n    localStorage.setItem(\"user-info\", JSON.stringify(result));\n    navigate(\"/curd\", { replace: true });\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row \">\n          <div className=\"col-md-10 mt-5 text-center\">\n           \n           \n          / <Form on\n              name=\"basic\"\n              labelCol={{\n                span: 8,\n              }}\n              wrapperCol={{\n                span: 16,\n              }}\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n              autoComplete=\"off\"\n            >\n              <Form.Item\n                label=\"Username\"\n                value={email}\n                name=\"email\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your username!\",\n                  },\n                ]}\n                onChange={(e) => setEmail(e.target.value)}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Password\"\n                value={password}\n                name=\"password\"\n                type=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your password!\",\n                  },\n                ]}\n                onChange={(e) => setPassword(e.target.value)}\n              >\n                <Input.Password />\n              </Form.Item>\n\n              <Form.Item\n                wrapperCol={{\n                  offset: 8,\n                  span: 16,\n                }}\n              >\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  onClick={(e) => submit(e)}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n            {/* <form onSubmit={submitForm}>\n              <div>\n                <label>Email </label>\n                <br />\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"email\"\n                  autoComplete=\"off\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <br />\n              <div>\n                <label>Password </label>\n                <br />\n                <input\n                  type=\"text\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"password\"\n                  autoComplete=\"off\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </div>\n              <br />\n              <div>\n                <button\n                  type=\"submit\"\n                  disabled={!submitForm}\n                  class=\"btn btn-warning\"\n                >\n                  Login\n                </button>\n              </div>\n            </form> */}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n\n// <Form\n//               name=\"basic\"\n//               labelCol={{\n//                 span: 8,\n//               }}\n//               wrapperCol={{\n//                 span: 16,\n//               }}\n//               initialValues={{\n//                 remember: true,\n//               }}\n//               onFinish={onFinish}\n//               onFinishFailed={onFinishFailed}\n//               autoComplete=\"off\"\n//             >\n//               <Form.Item\n//                 label=\"Username\"\n//                 value={email}\n//                 name=\"email\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"Please input your username!\",\n//                   },\n//                 ]}\n//                 onChange={(e) => setEmail(e.target.value)}\n//               >\n//                 <Input />\n//               </Form.Item>\n\n//               <Form.Item\n//                 label=\"Password\"\n//                 value={password}\n//                 name=\"password\"\n//                 type=\"password\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"Please input your password!\",\n//                   },\n//                 ]}\n//                 onChange={(e) => setPassword(e.target.value)}\n//               >\n//                 <Input.Password />\n//               </Form.Item>\n\n//               <Form.Item\n//                 wrapperCol={{\n//                   offset: 8,\n//                   span: 16,\n//                 }}\n//               >\n//                 <Button\n//                   type=\"primary\"\n//                   htmlType=\"submit\"\n//                   onClick={(e) => submit(e)}\n//                 >\n//                   Submit\n//                 </Button>\n//               </Form.Item>\n//             </Form>\n\n// useEffect(() => {\n//   if (localStorage.getItem(\"user-info\")) {\n//     navigate(\"/curd\", { replace: true });\n//   }\n// }, []);\n\n// const onFinish = (values) => {\n//   console.log(\"Success:\", values);\n// };\n\n// const onFinishFailed = (errorInfo) => {\n//   console.log(\"Failed:\", errorInfo);\n// };\n\n// const submit = (e) => {\n//   fetch(\"http://localhost:4500/login\", {\n//     method: \"POST\",\n//     body: JSON.stringify(login),\n//   }).then((response) => {\n//     response.json().then((result) => {\n//       console.log(result);\n//       localStorage.setItem(\n//         \"login\",\n//         JSON.stringify({\n//           login: true,\n//           token: result.token,\n//         })\n//       );\n//       setLogin({ login: true });\n//     });\n//   });\n\n// e.preventDefault();\n// const item = { email, password };\n// const result = await axios\n//   .post(`http://localhost:4500/login`, login)\n//   .then((res) => {\n//     console.log(res, \"fjfhjkfkfashkh\");\n//     localStorage.setItem(\"token\", res.token);\n//   })\n//   .catch((err) => {\n//     console.log(err, \"login time error\");\n//   });\n// };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}